<Application x:Class="Inventory.Adjustment.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:local="clr-namespace:Inventory.Adjustment">
    
    <Application.Resources>
        <ResourceDictionary>
            <Color x:Key="HighlightColor">#FF0078D7</Color>

            <Color x:Key="AccentBaseColor">#FF1F1F1F</Color>
            <!--  80%  -->
            <Color x:Key="AccentColor">#CC1F1F1F</Color>
            <!--  60%  -->
            <Color x:Key="AccentColor2">#991F1F1F</Color>
            <!--  40%  -->
            <Color x:Key="AccentColor3">#661F1F1F</Color>
            <!--  20%  -->
            <Color x:Key="AccentColor4">#331F1F1F</Color>


            <!-- Custom colors for light mode-->
            <SolidColorBrush x:Key="BaseLowColorBrush" Color="#33000000" />
            <SolidColorBrush x:Key="BaseMediumLowColorBrush" Color="#66000000" />
            <SolidColorBrush x:Key="BaseMediumColorBrush" Color="#99000000" />
            <SolidColorBrush x:Key="BaseMediumHighColorBrush" Color="#CC000000" />
            <SolidColorBrush x:Key="BaseHighColorBrush" Color="#FF000000" />

            <SolidColorBrush x:Key="AltMediumLowColorBrush" Color="#66FFFFFF" />
            <SolidColorBrush x:Key="AltMediumColorBrush" Color="#99FFFFFF" />
            <SolidColorBrush x:Key="AltMediumHighColorBrush" Color="#CCFFFFFF" />
            <SolidColorBrush x:Key="AltHighColorBrush" Color="#FFFFFFFF" />

            <SolidColorBrush x:Key="ChromeLowColorBrush" Color="#FFF2F2F2" />
            <SolidColorBrush x:Key="ChromeMediumLowColorBrush" Color="#FFF2F2F2" />
            <SolidColorBrush x:Key="ChromeMediumColorBrush" Color="#FFE6E6E6" />
            <SolidColorBrush x:Key="ChromeTableRowColorBrush" Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="ChromePrimaryBarColorBrush" Color="#FF1F1F1F" />
            <SolidColorBrush x:Key="ChromeSecondaryBarColorBrush" Color="#FF333333" />
            <SolidColorBrush x:Key="ChromeHighColorBrush" Color="#FFCCCCCC" />
            <SolidColorBrush x:Key="ChromeDisabledLowColorBrush" Color="#FF7A7A7A" />
            <SolidColorBrush x:Key="ChromeDisabledHighColorBrush" Color="#FFCCCCCC" />
            <SolidColorBrush x:Key="ChromeBlackLowColorBrush" Color="#33000000" />
            <SolidColorBrush x:Key="ChromeBlackMediumLowColorBrush" Color="#99000000" />
            <SolidColorBrush x:Key="ChromeBlackMediumColorBrush" Color="#CC000000" />
            <SolidColorBrush x:Key="ChromeBlackHighColorBrush" Color="#FF000000" />
            <SolidColorBrush x:Key="ChromeWhiteColorBrush" Color="#FFFFFFFF" />

            <SolidColorBrush x:Key="AccentLight3ColorBrush" Color="#FFA6D7FF" />
            <SolidColorBrush x:Key="AccentLight2ColorBrush" Color="#FF76B9ED" />
            <SolidColorBrush x:Key="AccentLight1ColorBrush" Color="#FF429CE3" />
            <SolidColorBrush x:Key="AccentNeutralColorBrush" Color="#FF0078D7" />
            <SolidColorBrush x:Key="AccentDark1ColorBrush" Color="#FF005A9E" />
            <SolidColorBrush x:Key="AccentDark2ColorBrush" Color="#FF004275" />
            <SolidColorBrush x:Key="AccentDark3ColorBrush" Color="#FF002642" />

            <SolidColorBrush x:Key="ListLowColorBrush" Color="#1A000000" />
            <SolidColorBrush x:Key="ListMediumColorBrush" Color="#33000000" />
            <SolidColorBrush x:Key="ListAccentLowColorBrush" Color="#990078D7" />

            <SolidColorBrush x:Key="RedErrorColorBrush" Color="#FFFF0000" />
            <SolidColorBrush x:Key="YellowWarningColorBrush" Color="#FFFFFF00" />

            <Style BasedOn="{StaticResource {x:Type CheckBox}}" TargetType="{x:Type CheckBox}">
                <Setter Property="Foreground" Value="{StaticResource BaseHighColorBrush}"/>
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <BulletDecorator Background="Transparent">
                                <BulletDecorator.Bullet>
                                    <Border x:Name="Border"  
                                        Width="20" 
                                        Height="20" 
                                        CornerRadius="0" 
                                        Background="White"
                                        BorderThickness="2"
                                        BorderBrush="{StaticResource BaseMediumHighColorBrush}">

                                        <Path Width="10" Height="10" 
                                          x:Name="CheckMark"
                                          SnapsToDevicePixels="False" 
                                          Stroke="White"
                                          StrokeThickness="2"
                                          Stretch="None"
                                          Data="M 0,4 L 4,9 L 10,0" />
                                    </Border>
                                </BulletDecorator.Bullet>
                                <ContentPresenter Margin="5,0,0,0"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              RecognizesAccessKey="True"/>
                            </BulletDecorator>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="false">
                                    <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="Border" Property="BorderThickness" Value="2" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="Border" Property="BorderThickness" Value="0" />
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource AccentNeutralColorBrush}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="CheckMark" Property="Stroke" Value="{StaticResource BaseMediumLowColorBrush}"/>
                                    <Setter TargetName="Border" Property="Background" Value="White" />
                                    <Setter TargetName="Border" Property="BorderThickness" Value="2" />
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BaseMediumLowColorBrush}" />
                                    <Setter Property="Foreground" Value="{StaticResource BaseMediumLowColorBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <Style TargetType="Button" x:Key="CloseButton">
                <Setter Property="OverridesDefaultStyle" Value="False" />
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Foreground" Value="{StaticResource BaseMediumHighColorBrush}"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Content" Value="X"/>
                <Setter Property="Margin" Value="5,0,0,0"/>
                <Setter Property="MinWidth" Value="40" />
                <Setter Property="MinHeight" Value="32" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Foreground" Value="{StaticResource AccentNeutralColorBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style BasedOn="{StaticResource {x:Type RadioButton}}" TargetType="{x:Type RadioButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RadioButton}">
                            <BulletDecorator Background="White">
                                <BulletDecorator.Bullet>
                                    <Grid Width="13" Height="13" >
                                        <Ellipse x:Name="Border"  
                                                 Fill="Transparent"
                                                 StrokeThickness="2"
                                                 Stroke="{StaticResource AccentNeutralColorBrush}" Height="13" VerticalAlignment="Bottom" />
                                        <Ellipse x:Name="CheckMark"
                                                 Margin="3"
                                                 Fill="{StaticResource BaseMediumHighColorBrush}" 
                                                 Stroke="{StaticResource BaseMediumHighColorBrush}"/>
                                    </Grid>
                                </BulletDecorator.Bullet>
                                <StackPanel>
                                    <ContentPresenter 
                                        Margin="5,0,0,0"
                                        VerticalAlignment="Top"
                                        HorizontalAlignment="Left"
                                        RecognizesAccessKey="True">
                                        <ContentPresenter.ContentTemplate>
                                            <DataTemplate>
                                                <Label Foreground="{StaticResource BaseHighColorBrush}" FontSize="12pt" Content="{Binding}"/>
                                            </DataTemplate>
                                        </ContentPresenter.ContentTemplate>
                                    </ContentPresenter>
                                </StackPanel>
                            </BulletDecorator>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="false">
                                    <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="Border" Property="Stroke" Value="{StaticResource BaseMediumHighColorBrush}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Border" Property="Fill" Value="White" />
                                    <Setter TargetName="Border" Property="Stroke" Value="{StaticResource BaseMediumLowColorBrush}" />
                                    <Setter TargetName="CheckMark" Property="Fill" Value="{StaticResource BaseMediumLowColorBrush}"/>
                                    <Setter TargetName="CheckMark" Property="Stroke" Value="{StaticResource BaseMediumLowColorBrush}"/>
                                    <Setter Property="Foreground" Value="{StaticResource BaseMediumLowColorBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <!--<Style TargetType="{x:Type TextBox}">
                <Setter Property="Height" Value="32" />
                <Setter Property="Padding" Value="4,1,4,1" />
                <Setter Property="FontSize" Value="12pt" />
                <Setter Property="BorderBrush" Value="{StaticResource ChromeDisabledLowColorBrush}" />
                <Setter Property="Foreground" Value="{StaticResource BaseHighColorBrush}" />

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="BorderBrush" Value="{StaticResource AccentNeutralColorBrush}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Background" Value="{StaticResource BaseLowColorBrush}" />
                        <Setter Property="BorderBrush" Value="{StaticResource BaseLowColorBrush}" />
                        <Setter Property="Foreground" Value="{StaticResource BaseMediumHighColorBrush}" />
                    </Trigger>
                </Style.Triggers>

            </Style>-->

            <Style TargetType="{x:Type ComboBoxItem}">
                <Setter Property="MinHeight" Value="26"/>
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="FontSize" Value="12pt" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border x:Name="border" Background="{StaticResource ChromeMediumLowColorBrush}">
                                <ContentPresenter Margin="4,5,24,5"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource ListAccentLowColorBrush}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource ListAccentLowColorBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>
                    <Border
                        x:Name="Border" 
                        Grid.ColumnSpan="2"
                        Background="{StaticResource AltMediumLowColorBrush}"
                        BorderBrush="{StaticResource BaseMediumLowColorBrush}"
                        Grid.Column="0"
                        Height="32"
                        BorderThickness="1" />
                    <Path 
                        x:Name="Arrow"
                        Grid.Column="1"     
                        Fill="{StaticResource BaseMediumLowColorBrush}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                        <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BaseMediumColorBrush}" />
                    </Trigger>
                    <Trigger Property="ToggleButton.IsChecked" Value="true">
                        <Setter TargetName="Border" Property="Background" Value="{StaticResource BaseLowColorBrush}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter TargetName="Border" Property="Background" Value="{StaticResource BaseLowColorBrush}" />
                        <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BaseMediumColorBrush}" />
                        <Setter Property="Foreground" Value="{StaticResource BaseMediumLowColorBrush}"/>
                        <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource BaseLowColorBrush}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
                <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
            </ControlTemplate>

            <Style TargetType="{x:Type ComboBox}">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="MinWidth" Value="120"/>
                <Setter Property="MinHeight" Value="26"/>
                <Setter Property="FontSize" Value="12pt" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <ToggleButton 
                                     Name="ToggleButton" 
                                     Template="{StaticResource ComboBoxToggleButton}" 
                                     Grid.Column="2" 
                                     Focusable="false"
                                     IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                     ClickMode="Press">
                                </ToggleButton>
                                <ContentPresenter
                                    Name="ContentSite"
                                    IsHitTestVisible="False" 
                                    Content="{TemplateBinding SelectionBoxItem}"
                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                    Margin="6,5,24,5"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left" />
                                <TextBox x:Name="PART_EditableTextBox"
                                    Style="{x:Null}" 
                                    Template="{StaticResource ComboBoxTextBox}" 
                                    HorizontalAlignment="Left" 
                                    VerticalAlignment="Center" 
                                    Margin="10,5,24,5"
                                    Focusable="True" 
                                    Background="Transparent"
                                    Visibility="Hidden"
                                    IsReadOnly="{TemplateBinding IsReadOnly}"/>
                                <Popup 
                                    Name="Popup"
                                    Placement="Bottom"
                                    IsOpen="{TemplateBinding IsDropDownOpen}"
                                    AllowsTransparency="True" 
                                    Focusable="False"
                                    PopupAnimation="Slide">
                                    <Grid 
                                        Name="DropDown"
                                        SnapsToDevicePixels="True"                
                                        MinWidth="{TemplateBinding ActualWidth}"
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border 
                                            x:Name="DropDownBorder"
                                            Background="{StaticResource ChromeMediumLowColorBrush}"
                                            BorderThickness="1"
                                            BorderBrush="{StaticResource ChromeHighColorBrush}"/>
                                        <ScrollViewer Margin="3" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource BaseLowColorBrush}"/>
                                </Trigger>
                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </Trigger>
                                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                    <Setter TargetName="DropDownBorder" Property="BorderBrush" Value="{StaticResource ChromeHighColorBrush}"/>
                                    <Setter TargetName="DropDownBorder" Property="Background" Value="{StaticResource ChromeMediumLowColorBrush}"/>
                                </Trigger>
                                <Trigger Property="IsEditable" Value="true">
                                    <Setter Property="IsTabStop" Value="false"/>
                                    <Setter TargetName="PART_EditableTextBox" Property="Visibility"	Value="Visible"/>
                                    <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type Button}">
                <Setter Property="FontSize" Value="12pt" />
                <Setter Property="Background" Value="{StaticResource BaseLowColorBrush}" />
                <Setter Property="Foreground" Value="{StaticResource BaseHighColorBrush}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Width" Value="90" />
                <Setter Property="Height" Value="32" />
                <Setter Property="Padding" Value="12,3.5,12,3.5" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter Margin="4" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource BaseMediumLowColorBrush}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource BaseMediumLowColorBrush}" />
                        <Setter Property="Background" Value="{StaticResource BaseMediumLowColorBrush}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="{StaticResource BaseLowColorBrush}" />
                        <Setter Property="Foreground" Value="{StaticResource BaseMediumLowColorBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--  re-set brushes too  -->
            <SolidColorBrush x:Key="HighlightBrush" Color="{StaticResource HighlightColor}" options:Freeze="True" />
            <SolidColorBrush x:Key="AccentBaseColorBrush" Color="{StaticResource AccentBaseColor}" options:Freeze="True" />
            <SolidColorBrush x:Key="AccentColorBrush" Color="{StaticResource AccentColor}" options:Freeze="True" />
            <SolidColorBrush x:Key="AccentColorBrush2" Color="{StaticResource AccentColor2}" options:Freeze="True" />
            <SolidColorBrush x:Key="AccentColorBrush3" Color="{StaticResource AccentColor3}" options:Freeze="True" />
            <SolidColorBrush x:Key="AccentColorBrush4" Color="{StaticResource AccentColor4}" options:Freeze="True" />

            <SolidColorBrush x:Key="WindowTitleColorBrush" Color="{StaticResource AccentColor}" options:Freeze="True" />

            <LinearGradientBrush x:Key="ProgressBrush" StartPoint="1.002,0.5" EndPoint="0.001,0.5" options:Freeze="True">
                <GradientStop Offset="0" Color="{StaticResource HighlightColor}" />
                <GradientStop Offset="1" Color="{StaticResource AccentColor3}" />
            </LinearGradientBrush>

            <SolidColorBrush x:Key="CheckmarkFill" Color="{StaticResource AccentColor}" options:Freeze="True" />
            <SolidColorBrush x:Key="RightArrowFill" Color="{StaticResource AccentColor}" options:Freeze="True" />

            <Color x:Key="IdealForegroundColor">White</Color>
            <SolidColorBrush x:Key="IdealForegroundColorBrush" Color="{StaticResource IdealForegroundColor}" options:Freeze="True" />
            <SolidColorBrush x:Key="IdealForegroundDisabledBrush" Opacity="0.4" Color="{StaticResource IdealForegroundColor}" options:Freeze="True" />
            <SolidColorBrush x:Key="AccentSelectedColorBrush" Color="{StaticResource IdealForegroundColor}" options:Freeze="True" />

            <!--  DataGrid brushes  -->
            <SolidColorBrush x:Key="MetroDataGrid.HighlightBrush" Color="{StaticResource AccentColor}" options:Freeze="True" />
            <SolidColorBrush x:Key="MetroDataGrid.HighlightTextBrush" Color="{StaticResource IdealForegroundColor}" options:Freeze="True" />
            <SolidColorBrush x:Key="MetroDataGrid.MouseOverHighlightBrush" Color="{StaticResource AccentColor3}" options:Freeze="True" />
            <SolidColorBrush x:Key="MetroDataGrid.FocusBorderBrush" Color="{StaticResource AccentColor}" options:Freeze="True" />
            <SolidColorBrush x:Key="MetroDataGrid.InactiveSelectionHighlightBrush" Color="{StaticResource AccentColor2}" options:Freeze="True" />
            <SolidColorBrush x:Key="MetroDataGrid.InactiveSelectionHighlightTextBrush" Color="{StaticResource IdealForegroundColor}" options:Freeze="True" />

            <SolidColorBrush x:Key="MahApps.Metro.Brushes.ToggleSwitchButton.OnSwitchBrush.Win10" Color="{StaticResource AccentColor}" options:Freeze="True" />
            <SolidColorBrush x:Key="MahApps.Metro.Brushes.ToggleSwitchButton.OnSwitchMouseOverBrush.Win10" Color="{StaticResource AccentColor2}" options:Freeze="True" />
            <SolidColorBrush x:Key="MahApps.Metro.Brushes.ToggleSwitchButton.ThumbIndicatorCheckedBrush.Win10" Color="{StaticResource IdealForegroundColor}" options:Freeze="True" />
            <Style TargetType="{x:Type Controls:WindowButtonCommands}"
                   BasedOn="{StaticResource MahApps.Metro.Styles.WindowButtonCommands.Win10}" />
            
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro.IconPacks;component/Themes/IconPacks.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>
    </Application.Resources>
</Application>