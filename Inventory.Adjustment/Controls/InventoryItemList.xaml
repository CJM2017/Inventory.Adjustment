<UserControl x:Class="Inventory.Adjustment.UI.Controls.InventoryItemList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Inventory.Adjustment.UI.Controls"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <Style x:Key="NormalListBoxStyle" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="DarkGray"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        </Style>

        <Style x:Key="NormalListItemStyle" TargetType="{x:Type ListBoxItem}">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
            </Style.Resources>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>

        <DataTemplate x:Key="NormalListItemDataTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Orientation="Horizontal" Margin="5">
                    <Rectangle Width="20" Height="20">
                        <Rectangle.Fill>
                            <SolidColorBrush Color="Blue" />
                        </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Text="{Binding Path=Code}" Margin="5" FontSize="14"/>
                </StackPanel>
                <StackPanel Grid.Column="2">
                    <Button 
                        Name="DeleteInventoryItemButton"
                        Margin="3"
                        Height="25" 
                        Width="25"
                        Visibility="Visible"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="DarkGray"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <StackPanel Height="50" Margin="5" >
                                                <iconPacks:PackIconMaterial 
                                                                        Kind="Delete" 
                                                                        Padding="1"
                                                                        HorizontalAlignment="Center" 
                                                                        Foreground="{TemplateBinding Background}"/>
                                            </StackPanel>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="DodgerBlue"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </Grid>
        </DataTemplate>

        <local:InventoryDataTemplateSelector x:Key="InventoryDataTemplateSelector" />
        
    </UserControl.Resources>

    <Grid Name="RootGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="2*" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
            </Grid>

            <Button Grid.Column="3"
                        Name="AddInventoryItemButton"
                        Margin="3"
                        Height="32"
                        Width="90"
                        Visibility="Visible"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Top">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="DodgerBlue"/>
                        <Setter Property="Opacity" Value="1.0"/>
                    </Style>
                </Button.Style>
                <TextBlock Foreground="White">Add</TextBlock>
            </Button>
        </StackPanel>

        <DataGrid Grid.Row="1"
                  SelectionUnit="FullRow" Margin="10,10,10,10" AlternationCount="2" AutoGenerateColumns="False" 
                  ItemsSource="{Binding Items}" CanUserAddRows="False" CanUserDeleteRows="False" 
                  CanUserReorderColumns="True" CanUserResizeColumns="True" CanUserResizeRows="False" CanUserSortColumns="True"
                  ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" 
                  ScrollViewer.CanContentScroll="False" IsReadOnly="True">
            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="DarkGray" />
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="DarkGray" />
                <Style BasedOn="{StaticResource MetroDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="#3f5d99" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="Padding" Value="6"/>
                </Style>
            </DataGrid.Resources>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <Trigger Property="AlternationIndex" Value="0">
                            <Setter Property="Background" Value="White" />
                        </Trigger>
                        <Trigger Property="AlternationIndex" Value="1">
                            <Setter Property="Background" Value="#eeeeee" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="DarkGray" />
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="DarkGray" />
                            <Setter Property="Foreground" Value="Black" />
                            <Setter Property="FontWeight" Value="Bold" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding Code}" Header="Code" SortDirection="Ascending" />
                <DataGridTextColumn Binding="{Binding Vendor}" Header="Vendor"/>
                <DataGridTextColumn Binding="{Binding Description}" Header="Description"/>
                <DataGridTextColumn Binding="{Binding Stock}" Header="Stock"/>
                <DataGridTextColumn Binding="{Binding Cost}" Header="Cost"/>
                <DataGridTextColumn Binding="{Binding BasePrice}" Header="Base Price" />
                <DataGridTemplateColumn Header="Delete">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button>Click Me</Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
